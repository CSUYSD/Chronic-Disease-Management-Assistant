"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useAxis = useAxis;
var React = _interopRequireWildcard(require("react"));
var _ZAxisContextProvider = require("../context/ZAxisContextProvider");
var _useCartesianContext = require("../context/CartesianProvider/useCartesianContext");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Helper to select an axis definition according to its direction and id.
 */
function useAxis({
  axisDirection,
  axisId
}) {
  const {
    xAxis,
    xAxisIds,
    yAxis,
    yAxisIds
  } = (0, _useCartesianContext.useCartesianContext)();
  const {
    zAxis,
    zAxisIds
  } = React.useContext(_ZAxisContextProvider.ZAxisContext);
  switch (axisDirection) {
    case 'x':
      {
        const id = typeof axisId === 'string' ? axisId : xAxisIds[axisId ?? 0];
        return xAxis[id];
      }
    case 'y':
      {
        const id = typeof axisId === 'string' ? axisId : yAxisIds[axisId ?? 0];
        return yAxis[id];
      }
    case 'z':
    default:
      {
        const id = typeof axisId === 'string' ? axisId : zAxisIds[axisId ?? 0];
        return zAxis[id];
      }
  }
}