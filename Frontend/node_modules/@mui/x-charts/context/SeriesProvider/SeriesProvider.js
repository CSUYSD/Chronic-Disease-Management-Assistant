"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SeriesProvider = SeriesProvider;
var React = _interopRequireWildcard(require("react"));
var _styles = require("@mui/material/styles");
var _colorPalettes = require("../../colorPalettes");
var _SeriesContext = require("./SeriesContext");
var _processSeries = require("./processSeries");
var _PluginProvider = require("../PluginProvider");
var _jsxRuntime = require("react/jsx-runtime");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function SeriesProvider(props) {
  const {
    series,
    dataset,
    colors = _colorPalettes.blueberryTwilightPalette,
    children
  } = props;
  const seriesFormatters = (0, _PluginProvider.useSeriesFormatter)();
  const theme = (0, _styles.useTheme)();
  const formattedSeries = React.useMemo(() => ({
    isInitialized: true,
    data: (0, _processSeries.preprocessSeries)({
      series,
      colors: typeof colors === 'function' ? colors(theme.palette.mode) : colors,
      seriesFormatters,
      dataset: dataset
    })
  }), [series, colors, theme.palette.mode, seriesFormatters, dataset]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_SeriesContext.SeriesContext.Provider, {
    value: formattedSeries,
    children: children
  });
}