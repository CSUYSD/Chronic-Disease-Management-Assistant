import { AxisConfig, ScaleName } from '../../models';
import { ChartsXAxisProps, ChartsAxisProps, ChartsYAxisProps, AxisId } from '../../models/axis';
import { CartesianChartSeriesType, DatasetType } from '../../models/seriesType/config';
import { DefaultizedAxisConfig } from './CartesianContext';
import { DrawingArea } from '../DrawingProvider';
import { FormattedSeries } from '../SeriesProvider';
import { ExtremumGetter } from '../PluginProvider';
export declare function computeValue(options: {
    drawingArea: DrawingArea;
    formattedSeries: FormattedSeries;
    axis: AxisConfig<ScaleName, any, ChartsYAxisProps>[] | undefined;
    extremumGetters: {
        [K in CartesianChartSeriesType]?: ExtremumGetter<K>;
    };
    axisDirection: 'y';
    dataset: DatasetType | undefined;
    zoomData?: {
        axisId: AxisId;
        start: number;
        end: number;
    }[];
}): {
    axis: DefaultizedAxisConfig<ChartsYAxisProps>;
    axisIds: string[];
};
export declare function computeValue(options: {
    drawingArea: DrawingArea;
    formattedSeries: FormattedSeries;
    axis: AxisConfig<ScaleName, any, ChartsXAxisProps>[] | undefined;
    extremumGetters: {
        [K in CartesianChartSeriesType]?: ExtremumGetter<K>;
    };
    axisDirection: 'x';
    dataset: DatasetType | undefined;
    zoomData?: {
        axisId: AxisId;
        start: number;
        end: number;
    }[];
}): {
    axis: DefaultizedAxisConfig<ChartsAxisProps>;
    axisIds: string[];
};
