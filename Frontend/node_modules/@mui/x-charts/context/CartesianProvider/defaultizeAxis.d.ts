import { MakeOptional } from '../../models/helpers';
import { AxisConfig, ScaleName } from '../../models';
import { ChartsAxisProps } from '../../models/axis';
export declare const defaultizeAxis: (inAxis: MakeOptional<AxisConfig<ScaleName, any, ChartsAxisProps>, "id">[] | undefined, axisName: "x" | "y") => {
    reverse?: boolean | undefined;
    fill?: string | undefined;
    stroke?: string | undefined;
    data?: any[] | undefined;
    label?: string | undefined;
    max?: (number | Date) | undefined;
    min?: (number | Date) | undefined;
    classes?: Partial<import("../..").ChartsAxisClasses> | undefined;
    slots?: Partial<import("../../models/axis").ChartsAxisSlots> | undefined;
    slotProps?: Partial<import("../../models/axis").ChartsAxisSlotProps> | undefined;
    dataKey?: string | undefined;
    valueFormatter?: ((value: any, context: import("../../models/axis").AxisValueFormatterContext) => string) | undefined;
    tickMaxStep?: number | undefined;
    tickMinStep?: number | undefined;
    tickNumber?: number | undefined;
    disableLine?: boolean | undefined;
    disableTicks?: boolean | undefined;
    tickFontSize?: number | undefined;
    tickLabelStyle?: import("../..").ChartsTextProps["style"];
    labelStyle?: import("../..").ChartsTextProps["style"];
    tickLabelInterval?: ("auto" | ((value: any, index: number) => boolean)) | undefined;
    labelFontSize?: number | undefined;
    tickSize?: number | undefined;
    tickInterval?: ("auto" | ((value: any, index: number) => boolean) | any[]) | undefined;
    tickPlacement?: ("start" | "end" | "middle" | "extremities") | undefined;
    tickLabelPlacement?: ("middle" | "tick") | undefined;
    scaleType?: "linear" | "time" | "log" | "band" | "point" | "pow" | "sqrt" | "utc" | undefined;
    colorMap?: import("../../models/colorMapping").ContinuousColorConfig<number | Date> | import("../../models/colorMapping").PiecewiseColorConfig<number | Date> | import("../../models/colorMapping").OrdinalColorConfig<string | number | Date> | undefined;
    hideTooltip?: boolean | undefined;
    id: import("../../models/axis").AxisId;
}[];
