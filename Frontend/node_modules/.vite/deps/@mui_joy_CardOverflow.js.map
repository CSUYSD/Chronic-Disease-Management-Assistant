{
  "version": 3,
  "sources": ["../../@mui/joy/CardOverflow/CardOverflow.js", "../../@mui/joy/ModalDialog/modalDialogClasses.js"],
  "sourcesContent": ["'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"children\", \"color\", \"variant\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { unstable_capitalize as capitalize } from '@mui/utils';\nimport { useThemeProps } from '../styles';\nimport styled from '../styles/styled';\nimport { getCardOverflowUtilityClass } from './cardOverflowClasses';\nimport useSlot from '../utils/useSlot';\nimport buttonClasses from '../Button/buttonClasses';\nimport cardClasses from '../Card/cardClasses';\nimport modalDialogClasses from '../ModalDialog/modalDialogClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', variant && `variant${capitalize(variant)}`, color && `color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getCardOverflowUtilityClass, {});\n};\nconst CardOverflowRoot = styled('div', {\n  name: 'JoyCardOverflow',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(({\n  theme,\n  ownerState\n}) => {\n  var _theme$variants;\n  const childRadius = 'calc(var(--CardOverflow-radius) - var(--variant-borderWidth, 0px))';\n  return _extends({\n    alignSelf: 'stretch',\n    // prevent shrinking if parent's align-items is not initial\n    position: 'relative',\n    display: 'flex',\n    flexDirection: 'var(--_CardOverflow-flexDirection)',\n    margin: 'var(--_CardOverflow-margin)',\n    borderRadius: 'var(--_CardOverflow-radius)',\n    padding: 'var(--_CardOverflow-padding)',\n    [`.${cardClasses.vertical} &, .${cardClasses.horizontal} .${cardClasses.vertical} &, .${modalDialogClasses.root} &`]: {\n      '--_CardOverflow-flexDirection': 'column',\n      // required to make AspectRatio works\n      '--AspectRatio-margin': '0 calc(-1 * var(--Card-padding))',\n      '--_CardOverflow-margin': '0 var(--CardOverflow-offset)',\n      '--_CardOverflow-padding': '0 var(--Card-padding)',\n      '&[data-first-child]': {\n        '--AspectRatio-radius': `${childRadius} ${childRadius} 0 0`,\n        '--_CardOverflow-radius': 'var(--CardOverflow-radius) var(--CardOverflow-radius) 0 0',\n        '--_CardOverflow-margin': 'var(--CardOverflow-offset) var(--CardOverflow-offset) 0'\n      },\n      '&[data-last-child]': {\n        '--AspectRatio-radius': `0 0 ${childRadius} ${childRadius}`,\n        '--_CardOverflow-radius': '0 0 var(--CardOverflow-radius) var(--CardOverflow-radius)',\n        '--_CardOverflow-margin': '0 var(--CardOverflow-offset) var(--CardOverflow-offset)'\n      },\n      '&[data-last-child][data-first-child]': {\n        '--AspectRatio-radius': childRadius,\n        '--_CardOverflow-margin': 'var(--CardOverflow-offset)'\n      },\n      [`& > .${buttonClasses.root}:only-child`]: {\n        zIndex: 1,\n        // prevent button from being covered Link overlay. This can be improved in the future with :has() selector\n        width: 'calc(100% + -2 * var(--CardOverflow-offset))',\n        '--Button-margin': '0 var(--CardOverflow-offset)',\n        '--Button-radius': '0 0 var(--CardOverflow-radius) var(--CardOverflow-radius)'\n      }\n    },\n    [`.${cardClasses.horizontal} &, .${cardClasses.vertical} .${cardClasses.horizontal} &`]: {\n      '--_CardOverflow-flexDirection': 'row',\n      '--AspectRatio-margin': 'calc(-1 * var(--Card-padding)) 0px',\n      '--_CardOverflow-margin': 'var(--CardOverflow-offset) 0px',\n      '--_CardOverflow-padding': 'var(--Card-padding) 0px',\n      '&[data-first-child]': {\n        '--AspectRatio-radius': `${childRadius} 0 0 ${childRadius}`,\n        '--_CardOverflow-radius': 'var(--CardOverflow-radius) 0 0 var(--CardOverflow-radius)',\n        '--_CardOverflow-margin': 'var(--CardOverflow-offset) 0px var(--CardOverflow-offset) var(--CardOverflow-offset)'\n      },\n      '&[data-last-child]': {\n        '--AspectRatio-radius': `0 ${childRadius} ${childRadius} 0`,\n        '--_CardOverflow-radius': '0 var(--CardOverflow-radius) var(--CardOverflow-radius) 0',\n        '--_CardOverflow-margin': 'var(--CardOverflow-offset) var(--CardOverflow-offset) var(--CardOverflow-offset) 0px'\n      },\n      '&[data-last-child][data-first-child]': {\n        '--AspectRatio-radius': childRadius,\n        '--_CardOverflow-margin': 'var(--CardOverflow-offset)'\n      },\n      [`& > .${buttonClasses.root}:only-child`]: {\n        height: 'calc(100% + -2 * var(--CardOverflow-offset))',\n        '--Button-margin': 'var(--CardOverflow-offset) 0',\n        '--Button-radius': '0 var(--CardOverflow-radius) var(--CardOverflow-radius) 0'\n      }\n    }\n  }, (_theme$variants = theme.variants[ownerState.variant]) == null ? void 0 : _theme$variants[ownerState.color]);\n});\n/**\n *\n * Demos:\n *\n * - [Card](https://mui.com/joy-ui/react-card/)\n *\n * API:\n *\n * - [CardOverflow API](https://mui.com/joy-ui/api/card-overflow/)\n */\nconst CardOverflow = /*#__PURE__*/React.forwardRef(function CardOverflow(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'JoyCardOverflow'\n  });\n  const {\n      className,\n      component = 'div',\n      children,\n      color = 'neutral',\n      variant = 'plain',\n      slots = {},\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component,\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const externalForwardedProps = _extends({}, other, {\n    component,\n    slots,\n    slotProps\n  });\n  const [SlotRoot, rootProps] = useSlot('root', {\n    ref,\n    className: clsx(classes.root, className),\n    elementType: CardOverflowRoot,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsx(SlotRoot, _extends({}, rootProps, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardOverflow.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used to render icon or text elements inside the CardOverflow if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * @default 'neutral'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['danger', 'neutral', 'primary', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The [global variant](https://mui.com/joy-ui/main-features/global-variants/) to use.\n   * @default 'plain'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['outlined', 'plain', 'soft', 'solid']), PropTypes.string])\n} : void 0;\n\n// @ts-ignore\nCardOverflow.muiName = 'CardOverflow';\nexport default CardOverflow;", "import { generateUtilityClass, generateUtilityClasses } from '../className';\nexport function getModalDialogUtilityClass(slot) {\n  return generateUtilityClass('MuiModalDialog', slot);\n}\nconst modalDialogClasses = generateUtilityClasses('MuiModalDialog', ['root', 'colorPrimary', 'colorNeutral', 'colorDanger', 'colorSuccess', 'colorWarning', 'colorContext', 'variantPlain', 'variantOutlined', 'variantSoft', 'variantSolid', 'sizeSm', 'sizeMd', 'sizeLg', 'layoutCenter', 'layoutFullscreen']);\nexport default modalDialogClasses;"],
  "mappings": "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",
  "names": ["CardOverflow", "_jsx", "PropTypes"]
}
