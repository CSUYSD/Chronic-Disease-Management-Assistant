{
  "version": 3,
  "sources": ["../../@mui/joy/InitColorSchemeScript/InitColorSchemeScript.js", "../../@mui/joy/styles/CssVarsProvider.js", "../../@mui/joy/styles/ThemeProvider.js"],
  "sourcesContent": ["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport SystemInitColorSchemeScript from '@mui/system/InitColorSchemeScript';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const defaultConfig = {\n  attribute: 'data-joy-color-scheme',\n  colorSchemeStorageKey: 'joy-color-scheme',\n  defaultLightColorScheme: 'light',\n  defaultDarkColorScheme: 'dark',\n  modeStorageKey: 'joy-mode'\n};\nexport default (function InitColorSchemeScript(props) {\n  return /*#__PURE__*/_jsx(SystemInitColorSchemeScript, _extends({}, defaultConfig, props));\n});", "'use client';\n\n// do not remove the following import (https://github.com/microsoft/TypeScript/issues/29808#issuecomment-1320713018)\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// @ts-ignore\nimport { unstable_createCssVarsProvider as createCssVarsProvider } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport THEME_ID from './identifier';\nimport { defaultConfig } from '../InitColorSchemeScript/InitColorSchemeScript';\nconst {\n  CssVarsProvider,\n  useColorScheme,\n  getInitColorSchemeScript: getInitColorSchemeScriptSystem\n} = createCssVarsProvider({\n  themeId: THEME_ID,\n  theme: defaultTheme,\n  attribute: defaultConfig.attribute,\n  modeStorageKey: defaultConfig.modeStorageKey,\n  colorSchemeStorageKey: defaultConfig.colorSchemeStorageKey,\n  defaultColorScheme: {\n    light: defaultConfig.defaultLightColorScheme,\n    dark: defaultConfig.defaultDarkColorScheme\n  }\n});\n\n/**\n * @deprecated use `InitColorSchemeScript` instead\n *\n * ```diff\n * - import { getInitColorSchemeScript } from '@mui/joy/styles';\n * + import InitColorSchemeScript from '@mui/joy/InitColorSchemeScript';\n *\n * - getInitColorSchemeScript();\n * + <InitColorSchemeScript />;\n * ```\n */\nexport const getInitColorSchemeScript = getInitColorSchemeScriptSystem;\nexport { CssVarsProvider, useColorScheme };", "'use client';\n\nimport * as React from 'react';\nimport { ThemeProvider as SystemThemeProvider, useTheme as useSystemTheme } from '@mui/system';\nimport defaultTheme from './defaultTheme';\nimport extendTheme from './extendTheme';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const useTheme = () => {\n  const theme = useSystemTheme(defaultTheme);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n\n  // @ts-ignore internal logic\n  return theme[THEME_ID] || theme;\n};\nexport default function ThemeProvider({\n  children,\n  theme: themeInput\n}) {\n  let theme = defaultTheme;\n  if (themeInput) {\n    theme = extendTheme(THEME_ID in themeInput ? themeInput[THEME_ID] : themeInput);\n  }\n  return /*#__PURE__*/_jsx(SystemThemeProvider, {\n    theme: theme,\n    themeId: themeInput && THEME_ID in themeInput ? THEME_ID : undefined,\n    children: children\n  });\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;AAAA;AACA,YAAuB;AAEvB,yBAA4B;AACrB,IAAM,gBAAgB;AAAA,EAC3B,WAAW;AAAA,EACX,uBAAuB;AAAA,EACvB,yBAAyB;AAAA,EACzB,wBAAwB;AAAA,EACxB,gBAAgB;AAClB;;;ACDA,IAAM;AAAA,EACJ;AAAA,EACA;AAAA,EACA,0BAA0B;AAC5B,IAAI,sBAAsB;AAAA,EACxB,SAAS;AAAA,EACT,OAAO;AAAA,EACP,WAAW,cAAc;AAAA,EACzB,gBAAgB,cAAc;AAAA,EAC9B,uBAAuB,cAAc;AAAA,EACrC,oBAAoB;AAAA,IAClB,OAAO,cAAc;AAAA,IACrB,MAAM,cAAc;AAAA,EACtB;AACF,CAAC;;;ACrBD,IAAAA,SAAuB;AAKvB,IAAAC,sBAA4B;",
  "names": ["React", "import_jsx_runtime"]
}
