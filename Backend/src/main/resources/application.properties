
<<<<<<< HEAD
# Enable the H2 console
#spring.h2.console.enabled=true
## Set the path to access the console
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:mem:demo
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2

# Optionally enable JPA and Hibernate settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

#MySQL database connection settings
spring.datasource.url=jdbc:mysql://localhost:3306/Fin_care?useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=wchwkwh697096

spring.servlet.multipart.max-file-size=5MB

=======
# # Enable the H2 console
# spring.h2.console.enabled=true
# # Set the path to access the console
# spring.h2.console.path=/h2-console
# spring.datasource.url=jdbc:h2:mem:demo
# spring.datasource.driverClassName=org.h2.Driver
# spring.datasource.username=sa
# spring.datasource.password=

# Optionally enable JPA and Hibernate settings
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=none
# automatically create the schema and drop it when the application is stopped
#spring.sql.init.mode=always
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

spring.servlet.multipart.max-file-size=5MB

# MySQL database connection settings
spring.datasource.url=jdbc:mysql://localhost:3306/health-care?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=rootpassword
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect



>>>>>>> 27cc4a4e8 (docker compose)
# Redis connection settings
spring.data.redis.host=redis
#spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=1800000
spring.data.redis.lettuce.pool.max-active=20
spring.data.redis.lettuce.pool.max-wait=-1
spring.data.redis.lettuce.pool.max-idle=5
spring.data.redis.lettuce.pool.min-idle=0
logging.level.org.springframework.data.redis=DEBUG
logging.level.io.lettuce=DEBUG

#JWT
jwt.secret=wchwawawawawaabcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
jwt.expiration=3600000

spring.profiles.active=prod

# Openai API
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o-mini
# Openai embedded model
spring.ai.openai.embedding.api-key=${OPENAI_API_KEY}
spring.ai.openai.embedding.options.model=text-embedding-3-small

# Chroma Vector Store connection properties
spring.ai.vectorstore.chroma.client.host=http://chroma
spring.ai.vectorstore.chroma.client.port=8000
spring.ai.vectorstore.chroma.collection-name=health-ai

# Spring Security
spring.security.user.name=admin
spring.security.user.password=adminpassword
spring.security.user.roles=ADMIN

# Elasticsearch config
spring.elasticsearch.uris=http://elasticsearch:9200
spring.elasticsearch.connection-timeout=1s
spring.elasticsearch.socket-timeout=30s
spring.data.elasticsearch.repositories.enabled=true
logging.level.org.springframework.data.elasticsearch.client.WIRE=TRACE



# maximal number of connections per route
spring.elasticsearch.restclient.sniffer.delay-after-failure=30s
spring.elasticsearch.restclient.sniffer.interval=10m

# Enable Spring Boot DevTools
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true



