name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Backend
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    - name: Run tests
      run: ./gradlew test
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Backend-artifacts
        path: Backend/build/libs/*.jar

  build-and-test-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20.x'
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Install dependencies
      run: npm ci
    - name: Build
      run: npm run build
    - name: Run tests
      run: npm test
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Frontend-artifacts
        path: client/.next

  deploy:
    needs: [build-and-test-backend, build-and-test-frontend]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
    - uses: actions/checkout@v2
    
    - name: Download backend artifacts
      uses: actions/download-artifact@v2
      with:
        name: Backend-artifacts
        path: Backend/build/libs

    - name: Download frontend artifacts
      uses: actions/download-artifact@v2
      with:
        name: Frontend-artifacts
        path: client/.next

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Backend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./Backend
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/backend:latest

    - name: Build and push Frontend Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./client
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/frontend:latest

    - name: Deploy to server
      env:
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
        HOST: ${{ secrets.SERVER_HOST }}
        USER: ${{ secrets.SERVER_USER }}
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
          docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:latest
          docker-compose up -d --force-recreate
        '
